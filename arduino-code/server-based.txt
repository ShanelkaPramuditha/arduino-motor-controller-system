// Control with wifi connection

#include <WiFi.h>
#include <WebServer.h>
#include <MotorController.h>

DCMotorController motor1 = DCMotorController(14, 26, 27);
const int ledPin = 2;

int pwmValue = 0;
bool motorOn = false;     // Motor status

const char* SSID = "SP_Zone_S10";
const char* PASSWORD = "3206@Spzone";

WebServer server(80);

void setup() {
  pinMode(ledPin, OUTPUT);
  Serial.begin(115200);

  // Connect to WiFi
  WiFi.begin(SSID, PASSWORD);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi!");
  Serial.println(WiFi.localIP());

  // Define Web Server routes
  server.on("/", handleRoot);
  server.on("/motor/on", handleMotorOn);
  server.on("/motor/off", handleMotorOff);
  server.on("/motor/pwm", handlePwmChange);
  server.on("/motor/status", getStatus);

  server.begin();
  Serial.println("HTTP server started");
}

void loop() {
  server.handleClient();
}

// HTTP route handlers
void handleRoot() {
  server.send(200, "text/plain", "Motor Controller Connected!");
}

// Get Motor Status (returns motor state and current PWM value in JSON format)
void getStatus() {
  String statusMessage = "{ \"motorOn\": " + String(motorOn ? "true" : "false") +
                         ", \"pwmValue\": " + String(pwmValue) + " }";
  server.send(200, "application/json", statusMessage);
}

void handleMotorOn() {
  if (server.hasArg("value")) {
    pwmValue = server.arg("value").toInt();
    motorOn = true;
    motor1.forward(pwmValue);
    digitalWrite(ledPin, HIGH);  // Turn on the LED
    server.send(200, "text/plain", "Motor On");
  }
}

void handleMotorOff() {
  motorOn = false;
  pwmValue = 0;
  motor1.brake();
  digitalWrite(ledPin, LOW);  // Turn off the LED
  server.send(200, "text/plain", "Motor Off");
}

void handlePwmChange() {
  if (motorOn) {
    if (server.hasArg("value")) {
      pwmValue = server.arg("value").toInt();
      if (pwmValue < 0) pwmValue = 0;
      if (pwmValue > 255) pwmValue = 255;
      motor1.forward(pwmValue);
      Serial.println("PWM set to " + String(pwmValue));
      server.send(200, "text/plain", "PWM set to " + String(pwmValue));
    } else {
      server.send(400, "text/plain", "Missing PWM value");
    }
  }
}